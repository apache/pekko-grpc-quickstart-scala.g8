buildscript {
  repositories {
    gradlePluginPortal()
  }
}
plugins {
  id 'java'
  id 'application'
  id 'org.apache.pekko.grpc.gradle' version '$pekko_grpc_version$'
}
repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.scala-lang:scala-library:$scala_version$'

  implementation 'org.apache.pekko:pekko-actor-typed_$scala_major_version$:$pekko_version$'
  implementation 'org.apache.pekko:pekko-discovery_$scala_major_version$:$pekko_version$'
  implementation 'org.apache.pekko:pekko-stream_$scala_major_version$:$pekko_version$'
  implementation 'org.apache.pekko:pekko-pki_$scala_major_version$:$pekko_version$'

  implementation 'ch.qos.logback:logback-classic:1.3.15'

  testImplementation 'org.apache.pekko:pekko-actor-testkit-typed_$scala_major_version$:$pekko_version$'
  testImplementation 'org.apache.pekko:pekko-stream-testkit_$scala_major_version$:$pekko_version$'
  testImplementation 'org.scalatest:scalatest_$scala_major_version$:3.2.19'
  // optional in Scalatest
  testRuntimeOnly 'com.vladsch.flexmark:flexmark-all:0.62.2'
  // Required by https://github.com/maiflai/gradle-scalatest
  testRuntimeOnly 'org.pegdown:pegdown:1.4.2'
}

task runServer(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'com.example.helloworld.GreeterServer'
}


task runClient(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'com.example.helloworld.GreeterClient'

  // arguments to pass to the application
  if (project.hasProperty("GreeterClient.user"))
    args  project.getProperty("GreeterClient.user")
}

application {
  mainClassName = 'com.example.helloworld.GreeterServer'
}
